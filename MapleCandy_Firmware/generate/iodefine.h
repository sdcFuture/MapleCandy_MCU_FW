/******************************************************************************/
/* DISCLAIMER                                                                 */
/* This software is supplied by Renesas Electronics Corporation and is only   */
/* intended for use with Renesas products. No other uses are authorized.This  */
/* software is owned by Renesas Electronics Corporation and is protected      */
/* under all applicable laws, including copyright laws.                       */
/* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES          */
/* REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING  */
/* BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR */
/* PURPOSE AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY           */
/* DISCLAIMED.                                                                */
/* TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS     */
/* ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE       */
/* LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL      */
/* DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS    */
/* AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.           */
/* Renesas reserves the right, without notice, to make changes to this        */
/* software and to discontinue the availability of this software.             */
/* By using this software, you agree to the additional terms and conditions   */
/* found by accessing the following link:                                     */
/* http://www.renesas.com/disclaimer                                          */
/*                                                                            */
/* Device     : RL78/R5F11MMF                                                 */
/* File Name  : R5F11MMF.h                                                    */
/* Abstract   : Definition of Special Function Register (SFR)                 */
/* History    : V1.01  [Device File version]                                  */
/* Options    : -df=DR5F11MMF.DVF -o=R5F11MMF.h -f                            */
/* Date       : 2017/06/08                                                    */
/* Version    : V1.08.00.01  [df2iodef.exe version]                           */
/* This is a typical example.                                                 */
/*                                                                            */
/******************************************************************************/
#ifndef __R5F11MMFIODEFINE_HEADER__
#define __R5F11MMFIODEFINE_HEADER__

typedef struct
{
    unsigned char no0:1;
    unsigned char no1:1;
    unsigned char no2:1;
    unsigned char no3:1;
    unsigned char no4:1;
    unsigned char no5:1;
    unsigned char no6:1;
    unsigned char no7:1;
} __bitf_T;

typedef struct
{
    unsigned char no0:1;
    unsigned char no1:1;
    unsigned char no2:1;
    unsigned char no3:1;
    unsigned char no4:1;
    unsigned char no5:1;
    unsigned char no6:1;
    unsigned char no7:1;
    unsigned char no8:1;
    unsigned char no9:1;
    unsigned char no10:1;
    unsigned char no11:1;
    unsigned char no12:1;
    unsigned char no13:1;
    unsigned char no14:1;
    unsigned char no15:1;
} __bitf_T2;



#define PU0            (*(volatile __near unsigned char  *)0x30)
#define PU0_bit        (*(volatile __near __bitf_T *)0x30)
#define PU1            (*(volatile __near unsigned char  *)0x31)
#define PU1_bit        (*(volatile __near __bitf_T *)0x31)
#define PU3            (*(volatile __near unsigned char  *)0x33)
#define PU3_bit        (*(volatile __near __bitf_T *)0x33)
#define PU4            (*(volatile __near unsigned char  *)0x34)
#define PU4_bit        (*(volatile __near __bitf_T *)0x34)
#define PU5            (*(volatile __near unsigned char  *)0x35)
#define PU5_bit        (*(volatile __near __bitf_T *)0x35)
#define PU7            (*(volatile __near unsigned char  *)0x37)
#define PU7_bit        (*(volatile __near __bitf_T *)0x37)
#define PU8            (*(volatile __near unsigned char  *)0x38)
#define PU8_bit        (*(volatile __near __bitf_T *)0x38)
#define PU12           (*(volatile __near unsigned char  *)0x3C)
#define PU12_bit       (*(volatile __near __bitf_T *)0x3C)
#define PIM0           (*(volatile __near unsigned char  *)0x40)
#define PIM0_bit       (*(volatile __near __bitf_T *)0x40)
#define PIM1           (*(volatile __near unsigned char  *)0x41)
#define PIM1_bit       (*(volatile __near __bitf_T *)0x41)
#define PIM3           (*(volatile __near unsigned char  *)0x43)
#define PIM3_bit       (*(volatile __near __bitf_T *)0x43)
#define PIM4           (*(volatile __near unsigned char  *)0x44)
#define PIM4_bit       (*(volatile __near __bitf_T *)0x44)
#define PIM8           (*(volatile __near unsigned char  *)0x48)
#define PIM8_bit       (*(volatile __near __bitf_T *)0x48)
#define POM0           (*(volatile __near unsigned char  *)0x50)
#define POM0_bit       (*(volatile __near __bitf_T *)0x50)
#define POM1           (*(volatile __near unsigned char  *)0x51)
#define POM1_bit       (*(volatile __near __bitf_T *)0x51)
#define POM3           (*(volatile __near unsigned char  *)0x53)
#define POM3_bit       (*(volatile __near __bitf_T *)0x53)
#define POM4           (*(volatile __near unsigned char  *)0x54)
#define POM4_bit       (*(volatile __near __bitf_T *)0x54)
#define POM8           (*(volatile __near unsigned char  *)0x58)
#define POM8_bit       (*(volatile __near __bitf_T *)0x58)
#define PMC2           (*(volatile __near unsigned char  *)0x62)
#define PMC2_bit       (*(volatile __near __bitf_T *)0x62)
#define PMC4           (*(volatile __near unsigned char  *)0x64)
#define PMC4_bit       (*(volatile __near __bitf_T *)0x64)
#define PMC8           (*(volatile __near unsigned char  *)0x68)
#define PMC8_bit       (*(volatile __near __bitf_T *)0x68)
#define PMC10          (*(volatile __near unsigned char  *)0x6A)
#define PMC10_bit      (*(volatile __near __bitf_T *)0x6A)
#define PMC14          (*(volatile __near unsigned char  *)0x6E)
#define PMC14_bit      (*(volatile __near __bitf_T *)0x6E)
#define PMC15          (*(volatile __near unsigned char  *)0x6F)
#define PMC15_bit      (*(volatile __near __bitf_T *)0x6F)
#define NFEN0          (*(volatile __near unsigned char  *)0x70)
#define NFEN0_bit      (*(volatile __near __bitf_T *)0x70)
#define NFEN1          (*(volatile __near unsigned char  *)0x71)
#define NFEN1_bit      (*(volatile __near __bitf_T *)0x71)
#define VREFCR         (*(volatile __near unsigned char  *)0x72)
#define VREFCR_bit     (*(volatile __near __bitf_T *)0x72)
#define VREFEN         (((volatile __near __bitf_T *)0x72)->no0)
#define IREFEN         (((volatile __near __bitf_T *)0x72)->no1)
#define ISC            (*(volatile __near unsigned char  *)0x73)
#define ISC_bit        (*(volatile __near __bitf_T *)0x73)
#define TIS0           (*(volatile __near unsigned char  *)0x74)
#define MUXSWSR        (*(volatile __near unsigned char  *)0x75)
#define PIOR           (*(volatile __near unsigned char  *)0x77)
#define IAWCTL         (*(volatile __near unsigned char  *)0x78)
#define ADCKS          (*(volatile __near unsigned char  *)0x79)
#define PER1           (*(volatile __near unsigned char  *)0x7A)
#define PER1_bit       (*(volatile __near __bitf_T *)0x7A)
#define DACEN          (((volatile __near __bitf_T *)0x7A)->no0)
#define MUXEN          (((volatile __near __bitf_T *)0x7A)->no1)
#define DTCEN          (((volatile __near __bitf_T *)0x7A)->no3)
#define CMPEN          (((volatile __near __bitf_T *)0x7A)->no5)
#define TMKAEN         (((volatile __near __bitf_T *)0x7A)->no7)
#define PMS            (*(volatile __near unsigned char  *)0x7B)
#define PMS_bit        (*(volatile __near __bitf_T *)0x7B)
#define ANCHCR         (*(volatile __near unsigned char  *)0x7D)
#define ANCHCR_bit     (*(volatile __near __bitf_T *)0x7D)
#define PUMP0EN        (((volatile __near __bitf_T *)0x7D)->no1)
#define PUMP1EN        (((volatile __near __bitf_T *)0x7D)->no2)
#define CBSW0ON        (((volatile __near __bitf_T *)0x7D)->no4)
#define CBSW1ON        (((volatile __near __bitf_T *)0x7D)->no5)
#define CBSW2ON        (((volatile __near __bitf_T *)0x7D)->no6)
#define DFLCTL         (*(volatile __near unsigned char  *)0x90)
#define DFLCTL_bit     (*(volatile __near __bitf_T *)0x90)
#define DFLEN          (((volatile __near __bitf_T *)0x90)->no0)
#define HIOTRM         (*(volatile __near unsigned char  *)0xA0)
#define HOCODIV        (*(volatile __near unsigned char  *)0xA8)
#define PER0           (*(volatile __near unsigned char  *)0xF0)
#define PER0_bit       (*(volatile __near __bitf_T *)0xF0)
#define TAU0EN         (((volatile __near __bitf_T *)0xF0)->no0)
#define SAU0EN         (((volatile __near __bitf_T *)0xF0)->no2)
#define SAU1EN         (((volatile __near __bitf_T *)0xF0)->no3)
#define IICA0EN        (((volatile __near __bitf_T *)0xF0)->no4)
#define ADCEN          (((volatile __near __bitf_T *)0xF0)->no5)
#define RTCWEN         (((volatile __near __bitf_T *)0xF0)->no7)
#define PUPCKS         (*(volatile __near unsigned char  *)0xF1)
#define PUPSCR         (*(volatile __near unsigned char  *)0xF2)
#define OSMC           (*(volatile __near unsigned char  *)0xF3)
#define RPECTL         (*(volatile __near unsigned char  *)0xF5)
#define RPECTL_bit     (*(volatile __near __bitf_T *)0xF5)
#define RPEF           (((volatile __near __bitf_T *)0xF5)->no0)
#define RPERDIS        (((volatile __near __bitf_T *)0xF5)->no7)
#define PORSR          (*(volatile __near unsigned char  *)0xF9)
#define BCDADJ         (*(volatile __near unsigned char  *)0xFE)
#define SSR00          (*(volatile __near unsigned short *)0x100)
#define SSR00L         (*(volatile __near unsigned char  *)0x100)
#define SSR01          (*(volatile __near unsigned short *)0x102)
#define SSR01L         (*(volatile __near unsigned char  *)0x102)
#define SSR02          (*(volatile __near unsigned short *)0x104)
#define SSR02L         (*(volatile __near unsigned char  *)0x104)
#define SSR03          (*(volatile __near unsigned short *)0x106)
#define SSR03L         (*(volatile __near unsigned char  *)0x106)
#define SIR00          (*(volatile __near unsigned short *)0x108)
#define SIR00L         (*(volatile __near unsigned char  *)0x108)
#define SIR01          (*(volatile __near unsigned short *)0x10A)
#define SIR01L         (*(volatile __near unsigned char  *)0x10A)
#define SIR02          (*(volatile __near unsigned short *)0x10C)
#define SIR02L         (*(volatile __near unsigned char  *)0x10C)
#define SIR03          (*(volatile __near unsigned short *)0x10E)
#define SIR03L         (*(volatile __near unsigned char  *)0x10E)
#define SMR00          (*(volatile __near unsigned short *)0x110)
#define SMR01          (*(volatile __near unsigned short *)0x112)
#define SMR02          (*(volatile __near unsigned short *)0x114)
#define SMR03          (*(volatile __near unsigned short *)0x116)
#define SCR00          (*(volatile __near unsigned short *)0x118)
#define SCR01          (*(volatile __near unsigned short *)0x11A)
#define SCR02          (*(volatile __near unsigned short *)0x11C)
#define SCR03          (*(volatile __near unsigned short *)0x11E)
#define SE0            (*(volatile __near unsigned short *)0x120)
#define SE0L           (*(volatile __near unsigned char  *)0x120)
#define SE0L_bit       (*(volatile __near __bitf_T *)0x120)
#define SS0            (*(volatile __near unsigned short *)0x122)
#define SS0L           (*(volatile __near unsigned char  *)0x122)
#define SS0L_bit       (*(volatile __near __bitf_T *)0x122)
#define ST0            (*(volatile __near unsigned short *)0x124)
#define ST0L           (*(volatile __near unsigned char  *)0x124)
#define ST0L_bit       (*(volatile __near __bitf_T *)0x124)
#define SPS0           (*(volatile __near unsigned short *)0x126)
#define SPS0L          (*(volatile __near unsigned char  *)0x126)
#define SO0            (*(volatile __near unsigned short *)0x128)
#define SOE0           (*(volatile __near unsigned short *)0x12A)
#define SOE0L          (*(volatile __near unsigned char  *)0x12A)
#define SOE0L_bit      (*(volatile __near __bitf_T *)0x12A)
#define SOL0           (*(volatile __near unsigned short *)0x134)
#define SOL0L          (*(volatile __near unsigned char  *)0x134)
#define SSC0           (*(volatile __near unsigned short *)0x138)
#define SSC0L          (*(volatile __near unsigned char  *)0x138)
#define SSR10          (*(volatile __near unsigned short *)0x140)
#define SSR10L         (*(volatile __near unsigned char  *)0x140)
#define SSR11          (*(volatile __near unsigned short *)0x142)
#define SSR11L         (*(volatile __near unsigned char  *)0x142)
#define SSR12          (*(volatile __near unsigned short *)0x144)
#define SSR12L         (*(volatile __near unsigned char  *)0x144)
#define SSR13          (*(volatile __near unsigned short *)0x146)
#define SSR13L         (*(volatile __near unsigned char  *)0x146)
#define SIR10          (*(volatile __near unsigned short *)0x148)
#define SIR10L         (*(volatile __near unsigned char  *)0x148)
#define SIR11          (*(volatile __near unsigned short *)0x14A)
#define SIR11L         (*(volatile __near unsigned char  *)0x14A)
#define SIR12          (*(volatile __near unsigned short *)0x14C)
#define SIR12L         (*(volatile __near unsigned char  *)0x14C)
#define SIR13          (*(volatile __near unsigned short *)0x14E)
#define SIR13L         (*(volatile __near unsigned char  *)0x14E)
#define SMR10          (*(volatile __near unsigned short *)0x150)
#define SMR11          (*(volatile __near unsigned short *)0x152)
#define SMR12          (*(volatile __near unsigned short *)0x154)
#define SMR13          (*(volatile __near unsigned short *)0x156)
#define SCR10          (*(volatile __near unsigned short *)0x158)
#define SCR11          (*(volatile __near unsigned short *)0x15A)
#define SCR12          (*(volatile __near unsigned short *)0x15C)
#define SCR13          (*(volatile __near unsigned short *)0x15E)
#define SE1            (*(volatile __near unsigned short *)0x160)
#define SE1L           (*(volatile __near unsigned char  *)0x160)
#define SE1L_bit       (*(volatile __near __bitf_T *)0x160)
#define SS1            (*(volatile __near unsigned short *)0x162)
#define SS1L           (*(volatile __near unsigned char  *)0x162)
#define SS1L_bit       (*(volatile __near __bitf_T *)0x162)
#define ST1            (*(volatile __near unsigned short *)0x164)
#define ST1L           (*(volatile __near unsigned char  *)0x164)
#define ST1L_bit       (*(volatile __near __bitf_T *)0x164)
#define SPS1           (*(volatile __near unsigned short *)0x166)
#define SPS1L          (*(volatile __near unsigned char  *)0x166)
#define SO1            (*(volatile __near unsigned short *)0x168)
#define SOE1           (*(volatile __near unsigned short *)0x16A)
#define SOE1L          (*(volatile __near unsigned char  *)0x16A)
#define SOE1L_bit      (*(volatile __near __bitf_T *)0x16A)
#define SOL1           (*(volatile __near unsigned short *)0x174)
#define SOL1L          (*(volatile __near unsigned char  *)0x174)
#define SSC1           (*(volatile __near unsigned short *)0x178)
#define SSC1L          (*(volatile __near unsigned char  *)0x178)
#define TCR00          (*(volatile __near unsigned short *)0x180)
#define TCR01          (*(volatile __near unsigned short *)0x182)
#define TCR02          (*(volatile __near unsigned short *)0x184)
#define TCR03          (*(volatile __near unsigned short *)0x186)
#define TCR04          (*(volatile __near unsigned short *)0x188)
#define TCR05          (*(volatile __near unsigned short *)0x18A)
#define TCR06          (*(volatile __near unsigned short *)0x18C)
#define TCR07          (*(volatile __near unsigned short *)0x18E)
#define TMR00          (*(volatile __near unsigned short *)0x190)
#define TMR01          (*(volatile __near unsigned short *)0x192)
#define TMR02          (*(volatile __near unsigned short *)0x194)
#define TMR03          (*(volatile __near unsigned short *)0x196)
#define TMR04          (*(volatile __near unsigned short *)0x198)
#define TMR05          (*(volatile __near unsigned short *)0x19A)
#define TMR06          (*(volatile __near unsigned short *)0x19C)
#define TMR07          (*(volatile __near unsigned short *)0x19E)
#define TSR00          (*(volatile __near unsigned short *)0x1A0)
#define TSR00L         (*(volatile __near unsigned char  *)0x1A0)
#define TSR01          (*(volatile __near unsigned short *)0x1A2)
#define TSR01L         (*(volatile __near unsigned char  *)0x1A2)
#define TSR02          (*(volatile __near unsigned short *)0x1A4)
#define TSR02L         (*(volatile __near unsigned char  *)0x1A4)
#define TSR03          (*(volatile __near unsigned short *)0x1A6)
#define TSR03L         (*(volatile __near unsigned char  *)0x1A6)
#define TSR04          (*(volatile __near unsigned short *)0x1A8)
#define TSR04L         (*(volatile __near unsigned char  *)0x1A8)
#define TSR05          (*(volatile __near unsigned short *)0x1AA)
#define TSR05L         (*(volatile __near unsigned char  *)0x1AA)
#define TSR06          (*(volatile __near unsigned short *)0x1AC)
#define TSR06L         (*(volatile __near unsigned char  *)0x1AC)
#define TSR07          (*(volatile __near unsigned short *)0x1AE)
#define TSR07L         (*(volatile __near unsigned char  *)0x1AE)
#define TE0            (*(volatile __near unsigned short *)0x1B0)
#define TE0L           (*(volatile __near unsigned char  *)0x1B0)
#define TE0L_bit       (*(volatile __near __bitf_T *)0x1B0)
#define TS0            (*(volatile __near unsigned short *)0x1B2)
#define TS0L           (*(volatile __near unsigned char  *)0x1B2)
#define TS0L_bit       (*(volatile __near __bitf_T *)0x1B2)
#define TT0            (*(volatile __near unsigned short *)0x1B4)
#define TT0L           (*(volatile __near unsigned char  *)0x1B4)
#define TT0L_bit       (*(volatile __near __bitf_T *)0x1B4)
#define TPS0           (*(volatile __near unsigned short *)0x1B6)
#define TO0            (*(volatile __near unsigned short *)0x1B8)
#define TO0L           (*(volatile __near unsigned char  *)0x1B8)
#define TOE0           (*(volatile __near unsigned short *)0x1BA)
#define TOE0L          (*(volatile __near unsigned char  *)0x1BA)
#define TOE0L_bit      (*(volatile __near __bitf_T *)0x1BA)
#define TOL0           (*(volatile __near unsigned short *)0x1BC)
#define TOL0L          (*(volatile __near unsigned char  *)0x1BC)
#define TOM0           (*(volatile __near unsigned short *)0x1BE)
#define TOM0L          (*(volatile __near unsigned char  *)0x1BE)
#define ELSELR00       (*(volatile __near unsigned char  *)0x1C0)
#define ELSELR01       (*(volatile __near unsigned char  *)0x1C1)
#define ELSELR02       (*(volatile __near unsigned char  *)0x1C2)
#define ELSELR03       (*(volatile __near unsigned char  *)0x1C3)
#define ELSELR04       (*(volatile __near unsigned char  *)0x1C4)
#define ELSELR05       (*(volatile __near unsigned char  *)0x1C5)
#define ELSELR06       (*(volatile __near unsigned char  *)0x1C6)
#define ELSELR07       (*(volatile __near unsigned char  *)0x1C7)
#define ELSELR08       (*(volatile __near unsigned char  *)0x1C8)
#define ELSELR09       (*(volatile __near unsigned char  *)0x1C9)
#define ELSELR10       (*(volatile __near unsigned char  *)0x1CA)
#define ELSELR11       (*(volatile __near unsigned char  *)0x1CB)
#define ELSELR12       (*(volatile __near unsigned char  *)0x1CC)
#define ELSELR13       (*(volatile __near unsigned char  *)0x1CD)
#define ELSELR14       (*(volatile __near unsigned char  *)0x1CE)
#define ELSELR15       (*(volatile __near unsigned char  *)0x1CF)
#define ELSELR16       (*(volatile __near unsigned char  *)0x1D0)
#define ELSELR17       (*(volatile __near unsigned char  *)0x1D1)
#define ELSELR18       (*(volatile __near unsigned char  *)0x1D2)
#define ELSELR19       (*(volatile __near unsigned char  *)0x1D3)
#define ELSELR20       (*(volatile __near unsigned char  *)0x1D4)
#define ELSELR21       (*(volatile __near unsigned char  *)0x1D5)
#define IICCTL00       (*(volatile __near unsigned char  *)0x230)
#define IICCTL00_bit   (*(volatile __near __bitf_T *)0x230)
#define SPT0           (((volatile __near __bitf_T *)0x230)->no0)
#define STT0           (((volatile __near __bitf_T *)0x230)->no1)
#define ACKE0          (((volatile __near __bitf_T *)0x230)->no2)
#define WTIM0          (((volatile __near __bitf_T *)0x230)->no3)
#define SPIE0          (((volatile __near __bitf_T *)0x230)->no4)
#define WREL0          (((volatile __near __bitf_T *)0x230)->no5)
#define LREL0          (((volatile __near __bitf_T *)0x230)->no6)
#define IICE0          (((volatile __near __bitf_T *)0x230)->no7)
#define IICCTL01       (*(volatile __near unsigned char  *)0x231)
#define IICCTL01_bit   (*(volatile __near __bitf_T *)0x231)
#define PRS0           (((volatile __near __bitf_T *)0x231)->no0)
#define DFC0           (((volatile __near __bitf_T *)0x231)->no2)
#define SMC0           (((volatile __near __bitf_T *)0x231)->no3)
#define DAD0           (((volatile __near __bitf_T *)0x231)->no4)
#define CLD0           (((volatile __near __bitf_T *)0x231)->no5)
#define WUP0           (((volatile __near __bitf_T *)0x231)->no7)
#define IICWL0         (*(volatile __near unsigned char  *)0x232)
#define IICWH0         (*(volatile __near unsigned char  *)0x233)
#define SVA0           (*(volatile __near unsigned char  *)0x234)
#define DTCBAR         (*(volatile __near unsigned char  *)0x2E0)
#define DTCEN0         (*(volatile __near unsigned char  *)0x2E8)
#define DTCEN0_bit     (*(volatile __near __bitf_T *)0x2E8)
#define DTCEN1         (*(volatile __near unsigned char  *)0x2E9)
#define DTCEN1_bit     (*(volatile __near __bitf_T *)0x2E9)
#define DTCEN2         (*(volatile __near unsigned char  *)0x2EA)
#define DTCEN2_bit     (*(volatile __near __bitf_T *)0x2EA)
#define DTCEN3         (*(volatile __near unsigned char  *)0x2EB)
#define DTCEN3_bit     (*(volatile __near __bitf_T *)0x2EB)
#define CRC0CTL        (*(volatile __near unsigned char  *)0x2F0)
#define CRC0CTL_bit    (*(volatile __near __bitf_T *)0x2F0)
#define CRC0EN         (((volatile __near __bitf_T *)0x2F0)->no7)
#define PGCRCL         (*(volatile __near unsigned short *)0x2F2)
#define CRCD           (*(volatile __near unsigned short *)0x2FA)
#define PFSEG0         (*(volatile __near unsigned char  *)0x300)
#define PFSEG0_bit     (*(volatile __near __bitf_T *)0x300)
#define PFSEG1         (*(volatile __near unsigned char  *)0x301)
#define PFSEG1_bit     (*(volatile __near __bitf_T *)0x301)
#define PFSEG2         (*(volatile __near unsigned char  *)0x302)
#define PFSEG2_bit     (*(volatile __near __bitf_T *)0x302)
#define PFSEG3         (*(volatile __near unsigned char  *)0x303)
#define PFSEG3_bit     (*(volatile __near __bitf_T *)0x303)
#define PFSEG4         (*(volatile __near unsigned char  *)0x304)
#define PFSEG4_bit     (*(volatile __near __bitf_T *)0x304)
#define PFSEG5         (*(volatile __near unsigned char  *)0x305)
#define PFSEG5_bit     (*(volatile __near __bitf_T *)0x305)
#define ISCLCD         (*(volatile __near unsigned char  *)0x308)
#define ISCLCD_bit     (*(volatile __near __bitf_T *)0x308)
#define SUBCUD         (*(volatile __near unsigned short *)0x310)
#define COMPMDR        (*(volatile __near unsigned char  *)0x340)
#define COMPMDR_bit    (*(volatile __near __bitf_T *)0x340)
#define C0ENB          (((volatile __near __bitf_T *)0x340)->no0)
#define C0MON          (((volatile __near __bitf_T *)0x340)->no3)
#define COMPFIR        (*(volatile __near unsigned char  *)0x341)
#define COMPFIR_bit    (*(volatile __near __bitf_T *)0x341)
#define COMPOCR        (*(volatile __near unsigned char  *)0x342)
#define COMPOCR_bit    (*(volatile __near __bitf_T *)0x342)
#define C0IE           (((volatile __near __bitf_T *)0x342)->no0)
#define C0OE           (((volatile __near __bitf_T *)0x342)->no1)
#define C0OP           (((volatile __near __bitf_T *)0x342)->no2)
#define SPDMD          (((volatile __near __bitf_T *)0x342)->no7)
#define AMPMC          (*(volatile __near unsigned char  *)0x348)
#define AMPMC_bit      (*(volatile __near __bitf_T *)0x348)
#define AMPSPH         (((volatile __near __bitf_T *)0x348)->no6)
#define AMPSP          (((volatile __near __bitf_T *)0x348)->no7)
#define AMPTRM         (*(volatile __near unsigned char  *)0x349)
#define AMPTRM_bit     (*(volatile __near __bitf_T *)0x349)
#define AMPTRS         (*(volatile __near unsigned char  *)0x34A)
#define AMPTRS_bit     (*(volatile __near __bitf_T *)0x34A)
#define AMPC           (*(volatile __near unsigned char  *)0x34B)
#define AMPC_bit       (*(volatile __near __bitf_T *)0x34B)
#define AMPE0          (((volatile __near __bitf_T *)0x34B)->no0)
#define AMPE1          (((volatile __near __bitf_T *)0x34B)->no1)
#define AMPE2          (((volatile __near __bitf_T *)0x34B)->no2)
#define IREFHE         (((volatile __near __bitf_T *)0x34B)->no6)
#define IREFE          (((volatile __near __bitf_T *)0x34B)->no7)
#define AMPMON         (*(volatile __near unsigned char  *)0x34C)
#define AMPMON_bit     (*(volatile __near __bitf_T *)0x34C)
#define TRTCMP0        (*(volatile __near unsigned short *)0x350)
#define TRTCMP00       (*(volatile __near unsigned char  *)0x350)
#define TRTCMP01       (*(volatile __near unsigned char  *)0x351)
#define TRTCR0         (*(volatile __near unsigned char  *)0x352)
#define TRTCR0_bit     (*(volatile __near __bitf_T *)0x352)
#define TSTART00       (((volatile __near __bitf_T *)0x352)->no0)
#define TSTART01       (((volatile __near __bitf_T *)0x352)->no2)
#define TRTMD0         (*(volatile __near unsigned char  *)0x353)
#define SEG0           (*(volatile __near unsigned char  *)0x400)
#define SEG1           (*(volatile __near unsigned char  *)0x401)
#define SEG2           (*(volatile __near unsigned char  *)0x402)
#define SEG3           (*(volatile __near unsigned char  *)0x403)
#define SEG4           (*(volatile __near unsigned char  *)0x404)
#define SEG5           (*(volatile __near unsigned char  *)0x405)
#define SEG6           (*(volatile __near unsigned char  *)0x406)
#define SEG12          (*(volatile __near unsigned char  *)0x40C)
#define SEG13          (*(volatile __near unsigned char  *)0x40D)
#define SEG14          (*(volatile __near unsigned char  *)0x40E)
#define SEG15          (*(volatile __near unsigned char  *)0x40F)
#define SEG16          (*(volatile __near unsigned char  *)0x410)
#define SEG17          (*(volatile __near unsigned char  *)0x411)
#define SEG18          (*(volatile __near unsigned char  *)0x412)
#define SEG19          (*(volatile __near unsigned char  *)0x413)
#define SEG20          (*(volatile __near unsigned char  *)0x414)
#define SEG21          (*(volatile __near unsigned char  *)0x415)
#define SEG22          (*(volatile __near unsigned char  *)0x416)
#define SEG25          (*(volatile __near unsigned char  *)0x419)
#define SEG26          (*(volatile __near unsigned char  *)0x41A)
#define SEG27          (*(volatile __near unsigned char  *)0x41B)
#define SEG29          (*(volatile __near unsigned char  *)0x41D)
#define SEG33          (*(volatile __near unsigned char  *)0x421)
#define SEG34          (*(volatile __near unsigned char  *)0x422)
#define SEG35          (*(volatile __near unsigned char  *)0x423)
#define SEG36          (*(volatile __near unsigned char  *)0x424)
#define SEG37          (*(volatile __near unsigned char  *)0x425)
#define SEG38          (*(volatile __near unsigned char  *)0x426)
#define SEG39          (*(volatile __near unsigned char  *)0x427)
#define SEG40          (*(volatile __near unsigned char  *)0x428)
#define SEG43          (*(volatile __near unsigned char  *)0x42B)
#define SEG44          (*(volatile __near unsigned char  *)0x42C)
#define TRT0           (*(volatile __near unsigned short *)0x500)
#define TRT00          (*(volatile __near unsigned char  *)0x500)
#define TRT01          (*(volatile __near unsigned char  *)0x501)
#define ADCSR          (*(volatile __near unsigned short *)0x600)
#define ADANSA0        (*(volatile __near unsigned short *)0x604)
#define ADADS0         (*(volatile __near unsigned short *)0x608)
#define ADADC          (*(volatile __near unsigned char  *)0x60C)
#define ADADC_bit      (*(volatile __near __bitf_T *)0x60C)
#define AVEE           (((volatile __near __bitf_T *)0x60C)->no7)
#define ADCER          (*(volatile __near unsigned short *)0x60E)
#define ADSTRGR        (*(volatile __near unsigned short *)0x610)
#define ADEXICR        (*(volatile __near unsigned short *)0x612)
#define ADTSDR         (*(volatile __near unsigned short *)0x61A)
#define ADOCDR         (*(volatile __near unsigned short *)0x61C)
#define ADRD           (*(volatile __near unsigned short *)0x61E)
#define ADDR0          (*(volatile __near unsigned short *)0x620)
#define ADDR3          (*(volatile __near unsigned short *)0x626)
#define ADDR4          (*(volatile __near unsigned short *)0x628)
#define ADDR5          (*(volatile __near unsigned short *)0x62A)
#define ADDR6          (*(volatile __near unsigned short *)0x62C)
#define ADDR7          (*(volatile __near unsigned short *)0x62E)
#define ADDR8          (*(volatile __near unsigned short *)0x630)
#define ADDR9          (*(volatile __near unsigned short *)0x632)
#define ADDR12         (*(volatile __near unsigned short *)0x638)
#define ADDR13         (*(volatile __near unsigned short *)0x63A)
#define ADDR14         (*(volatile __near unsigned short *)0x63C)
#define ADHVREFCNT     (*(volatile __near unsigned char  *)0x68A)
#define ADHVREFCNT_bit (*(volatile __near __bitf_T *)0x68A)
#define ADSLP          (((volatile __near __bitf_T *)0x68A)->no7)
#define ADSSTRT        (*(volatile __near unsigned char  *)0x6DE)
#define ADSSTRO        (*(volatile __near unsigned char  *)0x6DF)
#define ADSSTR0        (*(volatile __near unsigned char  *)0x6E0)
#define ADSSTR3        (*(volatile __near unsigned char  *)0x6E3)
#define ADSSTR4        (*(volatile __near unsigned char  *)0x6E4)
#define ADSSTR5        (*(volatile __near unsigned char  *)0x6E5)
#define ADSSTR6        (*(volatile __near unsigned char  *)0x6E6)
#define ADSSTR7        (*(volatile __near unsigned char  *)0x6E7)
#define ADSSTR8        (*(volatile __near unsigned char  *)0x6E8)
#define ADSSTR9        (*(volatile __near unsigned char  *)0x6E9)
#define ADSSTR12       (*(volatile __near unsigned char  *)0x6EC)
#define ADSSTR13       (*(volatile __near unsigned char  *)0x6ED)
#define ADSSTR14       (*(volatile __near unsigned char  *)0x6EE)
#define P0             (*(volatile __near unsigned char  *)0xFF00)
#define P0_bit         (*(volatile __near __bitf_T *)0xFF00)
#define P1             (*(volatile __near unsigned char  *)0xFF01)
#define P1_bit         (*(volatile __near __bitf_T *)0xFF01)
#define P2             (*(volatile __near unsigned char  *)0xFF02)
#define P2_bit         (*(volatile __near __bitf_T *)0xFF02)
#define P3             (*(volatile __near unsigned char  *)0xFF03)
#define P3_bit         (*(volatile __near __bitf_T *)0xFF03)
#define P4             (*(volatile __near unsigned char  *)0xFF04)
#define P4_bit         (*(volatile __near __bitf_T *)0xFF04)
#define P5             (*(volatile __near unsigned char  *)0xFF05)
#define P5_bit         (*(volatile __near __bitf_T *)0xFF05)
#define P6             (*(volatile __near unsigned char  *)0xFF06)
#define P6_bit         (*(volatile __near __bitf_T *)0xFF06)
#define P7             (*(volatile __near unsigned char  *)0xFF07)
#define P7_bit         (*(volatile __near __bitf_T *)0xFF07)
#define P8             (*(volatile __near unsigned char  *)0xFF08)
#define P8_bit         (*(volatile __near __bitf_T *)0xFF08)
#define P10            (*(volatile __near unsigned char  *)0xFF0A)
#define P10_bit        (*(volatile __near __bitf_T *)0xFF0A)
#define P12            (*(volatile __near unsigned char  *)0xFF0C)
#define P12_bit        (*(volatile __near __bitf_T *)0xFF0C)
#define P13            (*(volatile __near unsigned char  *)0xFF0D)
#define P13_bit        (*(volatile __near __bitf_T *)0xFF0D)
#define P14            (*(volatile __near unsigned char  *)0xFF0E)
#define P14_bit        (*(volatile __near __bitf_T *)0xFF0E)
#define P15            (*(volatile __near unsigned char  *)0xFF0F)
#define P15_bit        (*(volatile __near __bitf_T *)0xFF0F)
#define SDR00          (*(volatile __near unsigned short *)0xFF10)
#define SIO00          (*(volatile __near unsigned char  *)0xFF10)
#define TXD0           (*(volatile __near unsigned char  *)0xFF10)
#define SDR01          (*(volatile __near unsigned short *)0xFF12)
#define RXD0           (*(volatile __near unsigned char  *)0xFF12)
#define SDR12          (*(volatile __near unsigned short *)0xFF14)
#define SIO30          (*(volatile __near unsigned char  *)0xFF14)
#define TXD3           (*(volatile __near unsigned char  *)0xFF14)
#define SDR13          (*(volatile __near unsigned short *)0xFF16)
#define RXD3           (*(volatile __near unsigned char  *)0xFF16)
#define TDR00          (*(volatile __near unsigned short *)0xFF18)
#define TDR01          (*(volatile __near unsigned short *)0xFF1A)
#define TDR01L         (*(volatile __near unsigned char  *)0xFF1A)
#define TDR01H         (*(volatile __near unsigned char  *)0xFF1B)
#define PM0            (*(volatile __near unsigned char  *)0xFF20)
#define PM0_bit        (*(volatile __near __bitf_T *)0xFF20)
#define PM1            (*(volatile __near unsigned char  *)0xFF21)
#define PM1_bit        (*(volatile __near __bitf_T *)0xFF21)
#define PM2            (*(volatile __near unsigned char  *)0xFF22)
#define PM2_bit        (*(volatile __near __bitf_T *)0xFF22)
#define PM3            (*(volatile __near unsigned char  *)0xFF23)
#define PM3_bit        (*(volatile __near __bitf_T *)0xFF23)
#define PM4            (*(volatile __near unsigned char  *)0xFF24)
#define PM4_bit        (*(volatile __near __bitf_T *)0xFF24)
#define PM5            (*(volatile __near unsigned char  *)0xFF25)
#define PM5_bit        (*(volatile __near __bitf_T *)0xFF25)
#define PM6            (*(volatile __near unsigned char  *)0xFF26)
#define PM6_bit        (*(volatile __near __bitf_T *)0xFF26)
#define PM7            (*(volatile __near unsigned char  *)0xFF27)
#define PM7_bit        (*(volatile __near __bitf_T *)0xFF27)
#define PM8            (*(volatile __near unsigned char  *)0xFF28)
#define PM8_bit        (*(volatile __near __bitf_T *)0xFF28)
#define PM10           (*(volatile __near unsigned char  *)0xFF2A)
#define PM10_bit       (*(volatile __near __bitf_T *)0xFF2A)
#define PM12           (*(volatile __near unsigned char  *)0xFF2C)
#define PM12_bit       (*(volatile __near __bitf_T *)0xFF2C)
#define PM14           (*(volatile __near unsigned char  *)0xFF2E)
#define PM14_bit       (*(volatile __near __bitf_T *)0xFF2E)
#define PM15           (*(volatile __near unsigned char  *)0xFF2F)
#define PM15_bit       (*(volatile __near __bitf_T *)0xFF2F)
#define KRCTL          (*(volatile __near unsigned char  *)0xFF34)
#define KRCTL_bit      (*(volatile __near __bitf_T *)0xFF34)
#define KRF            (*(volatile __near unsigned char  *)0xFF35)
#define KRM0           (*(volatile __near unsigned char  *)0xFF37)
#define KRM0_bit       (*(volatile __near __bitf_T *)0xFF37)
#define EGP0           (*(volatile __near unsigned char  *)0xFF38)
#define EGP0_bit       (*(volatile __near __bitf_T *)0xFF38)
#define EGN0           (*(volatile __near unsigned char  *)0xFF39)
#define EGN0_bit       (*(volatile __near __bitf_T *)0xFF39)
#define LCDM0          (*(volatile __near unsigned char  *)0xFF40)
#define LCDM1          (*(volatile __near unsigned char  *)0xFF41)
#define LCDM1_bit      (*(volatile __near __bitf_T *)0xFF41)
#define LCDVLM         (((volatile __near __bitf_T *)0xFF41)->no0)
#define LCDSEL         (((volatile __near __bitf_T *)0xFF41)->no3)
#define BLON           (((volatile __near __bitf_T *)0xFF41)->no4)
#define VLCON          (((volatile __near __bitf_T *)0xFF41)->no5)
#define SCOC           (((volatile __near __bitf_T *)0xFF41)->no6)
#define LCDON          (((volatile __near __bitf_T *)0xFF41)->no7)
#define LCDC0          (*(volatile __near unsigned char  *)0xFF42)
#define VLCD           (*(volatile __near unsigned char  *)0xFF43)
#define SDR02          (*(volatile __near unsigned short *)0xFF44)
#define SIO10          (*(volatile __near unsigned char  *)0xFF44)
#define TXD1           (*(volatile __near unsigned char  *)0xFF44)
#define SDR03          (*(volatile __near unsigned short *)0xFF46)
#define RXD1           (*(volatile __near unsigned char  *)0xFF46)
#define SDR10          (*(volatile __near unsigned short *)0xFF48)
#define SIO20          (*(volatile __near unsigned char  *)0xFF48)
#define TXD2           (*(volatile __near unsigned char  *)0xFF48)
#define SDR11          (*(volatile __near unsigned short *)0xFF4A)
#define RXD2           (*(volatile __near unsigned char  *)0xFF4A)
#define IICA0          (*(volatile __near unsigned char  *)0xFF50)
#define IICS0          (*(volatile __near unsigned char  *)0xFF51)
#define IICS0_bit      (*(volatile __near __bitf_T *)0xFF51)
#define SPD0           (((volatile __near __bitf_T *)0xFF51)->no0)
#define STD0           (((volatile __near __bitf_T *)0xFF51)->no1)
#define ACKD0          (((volatile __near __bitf_T *)0xFF51)->no2)
#define TRC0           (((volatile __near __bitf_T *)0xFF51)->no3)
#define COI0           (((volatile __near __bitf_T *)0xFF51)->no4)
#define EXC0           (((volatile __near __bitf_T *)0xFF51)->no5)
#define ALD0           (((volatile __near __bitf_T *)0xFF51)->no6)
#define MSTS0          (((volatile __near __bitf_T *)0xFF51)->no7)
#define IICF0          (*(volatile __near unsigned char  *)0xFF52)
#define IICF0_bit      (*(volatile __near __bitf_T *)0xFF52)
#define IICRSV0        (((volatile __near __bitf_T *)0xFF52)->no0)
#define STCEN0         (((volatile __near __bitf_T *)0xFF52)->no1)
#define IICBSY0        (((volatile __near __bitf_T *)0xFF52)->no6)
#define STCF0          (((volatile __near __bitf_T *)0xFF52)->no7)
#define TDR02          (*(volatile __near unsigned short *)0xFF64)
#define TDR03          (*(volatile __near unsigned short *)0xFF66)
#define TDR03L         (*(volatile __near unsigned char  *)0xFF66)
#define TDR03H         (*(volatile __near unsigned char  *)0xFF67)
#define TDR04          (*(volatile __near unsigned short *)0xFF68)
#define TDR05          (*(volatile __near unsigned short *)0xFF6A)
#define TDR06          (*(volatile __near unsigned short *)0xFF6C)
#define TDR07          (*(volatile __near unsigned short *)0xFF6E)
#define DADR0          (*(volatile __near unsigned short *)0xFF70)
#define DADR1          (*(volatile __near unsigned short *)0xFF72)
#define DACR           (*(volatile __near unsigned char  *)0xFF74)
#define DADPR          (*(volatile __near unsigned char  *)0xFF75)
#define DAADSCR        (*(volatile __near unsigned char  *)0xFF76)
#define DAVREFCR       (*(volatile __near unsigned char  *)0xFF77)
#define ITMC           (*(volatile __near unsigned short *)0xFF90)
#define SEC            (*(volatile __near unsigned char  *)0xFF92)
#define MIN            (*(volatile __near unsigned char  *)0xFF93)
#define HOUR           (*(volatile __near unsigned char  *)0xFF94)
#define WEEK           (*(volatile __near unsigned char  *)0xFF95)
#define DAY            (*(volatile __near unsigned char  *)0xFF96)
#define MONTH          (*(volatile __near unsigned char  *)0xFF97)
#define YEAR           (*(volatile __near unsigned char  *)0xFF98)
#define ALARMWM        (*(volatile __near unsigned char  *)0xFF9A)
#define ALARMWH        (*(volatile __near unsigned char  *)0xFF9B)
#define ALARMWW        (*(volatile __near unsigned char  *)0xFF9C)
#define RTCC0          (*(volatile __near unsigned char  *)0xFF9D)
#define RTCC0_bit      (*(volatile __near __bitf_T *)0xFF9D)
#define RCLOE1         (((volatile __near __bitf_T *)0xFF9D)->no5)
#define RTCE           (((volatile __near __bitf_T *)0xFF9D)->no7)
#define RTCC1          (*(volatile __near unsigned char  *)0xFF9E)
#define RTCC1_bit      (*(volatile __near __bitf_T *)0xFF9E)
#define RWAIT          (((volatile __near __bitf_T *)0xFF9E)->no0)
#define RWST           (((volatile __near __bitf_T *)0xFF9E)->no1)
#define RIFG           (((volatile __near __bitf_T *)0xFF9E)->no3)
#define WAFG           (((volatile __near __bitf_T *)0xFF9E)->no4)
#define RITE           (((volatile __near __bitf_T *)0xFF9E)->no5)
#define WALIE          (((volatile __near __bitf_T *)0xFF9E)->no6)
#define WALE           (((volatile __near __bitf_T *)0xFF9E)->no7)
#define CMC            (*(volatile __near unsigned char  *)0xFFA0)
#define CSC            (*(volatile __near unsigned char  *)0xFFA1)
#define CSC_bit        (*(volatile __near __bitf_T *)0xFFA1)
#define HIOSTOP        (((volatile __near __bitf_T *)0xFFA1)->no0)
#define XTSTOP         (((volatile __near __bitf_T *)0xFFA1)->no6)
#define MSTOP          (((volatile __near __bitf_T *)0xFFA1)->no7)
#define OSTC           (*(volatile __near unsigned char  *)0xFFA2)
#define OSTC_bit       (*(volatile __near __bitf_T *)0xFFA2)
#define OSTS           (*(volatile __near unsigned char  *)0xFFA3)
#define CKC            (*(volatile __near unsigned char  *)0xFFA4)
#define CKC_bit        (*(volatile __near __bitf_T *)0xFFA4)
#define MCM0           (((volatile __near __bitf_T *)0xFFA4)->no4)
#define MCS            (((volatile __near __bitf_T *)0xFFA4)->no5)
#define CSS            (((volatile __near __bitf_T *)0xFFA4)->no6)
#define CLS            (((volatile __near __bitf_T *)0xFFA4)->no7)
#define CKS0           (*(volatile __near unsigned char  *)0xFFA5)
#define CKS0_bit       (*(volatile __near __bitf_T *)0xFFA5)
#define PCLOE0         (((volatile __near __bitf_T *)0xFFA5)->no7)
#define CKS1           (*(volatile __near unsigned char  *)0xFFA6)
#define CKS1_bit       (*(volatile __near __bitf_T *)0xFFA6)
#define PCLOE1         (((volatile __near __bitf_T *)0xFFA6)->no7)
#define RESF           (*(volatile __near unsigned char  *)0xFFA8)
#define LVIM           (*(volatile __near unsigned char  *)0xFFA9)
#define LVIM_bit       (*(volatile __near __bitf_T *)0xFFA9)
#define LVIF           (((volatile __near __bitf_T *)0xFFA9)->no0)
#define LVIOMSK        (((volatile __near __bitf_T *)0xFFA9)->no1)
#define LVISEN         (((volatile __near __bitf_T *)0xFFA9)->no7)
#define LVIS           (*(volatile __near unsigned char  *)0xFFAA)
#define LVIS_bit       (*(volatile __near __bitf_T *)0xFFAA)
#define LVILV          (((volatile __near __bitf_T *)0xFFAA)->no0)
#define LVIMD          (((volatile __near __bitf_T *)0xFFAA)->no7)
#define WDTE           (*(volatile __near unsigned char  *)0xFFAB)
#define CRCIN          (*(volatile __near unsigned char  *)0xFFAC)
#define IF2            (*(volatile __near unsigned short *)0xFFD0)
#define IF2L           (*(volatile __near unsigned char  *)0xFFD0)
#define IF2L_bit       (*(volatile __near __bitf_T *)0xFFD0)
#define IF2H           (*(volatile __near unsigned char  *)0xFFD1)
#define IF2H_bit       (*(volatile __near __bitf_T *)0xFFD1)
#define SREIF3         (((volatile __near __bitf_T *)0xFFD0)->no0)
#define TMIF04         (((volatile __near __bitf_T *)0xFFD0)->no1)
#define TMIF05         (((volatile __near __bitf_T *)0xFFD0)->no2)
#define PIF6           (((volatile __near __bitf_T *)0xFFD0)->no3)
#define PIF7           (((volatile __near __bitf_T *)0xFFD0)->no4)
#define CMPIF0         (((volatile __near __bitf_T *)0xFFD0)->no6)
#define TMIF06         (((volatile __near __bitf_T *)0xFFD1)->no0)
#define TMIF07         (((volatile __near __bitf_T *)0xFFD1)->no1)
#define ITIF00         (((volatile __near __bitf_T *)0xFFD1)->no2)
#define ITIF01         (((volatile __near __bitf_T *)0xFFD1)->no3)
#define FLIF           (((volatile __near __bitf_T *)0xFFD1)->no7)
#define MK2            (*(volatile __near unsigned short *)0xFFD4)
#define MK2L           (*(volatile __near unsigned char  *)0xFFD4)
#define MK2L_bit       (*(volatile __near __bitf_T *)0xFFD4)
#define MK2H           (*(volatile __near unsigned char  *)0xFFD5)
#define MK2H_bit       (*(volatile __near __bitf_T *)0xFFD5)
#define SREMK3         (((volatile __near __bitf_T *)0xFFD4)->no0)
#define TMMK04         (((volatile __near __bitf_T *)0xFFD4)->no1)
#define TMMK05         (((volatile __near __bitf_T *)0xFFD4)->no2)
#define PMK6           (((volatile __near __bitf_T *)0xFFD4)->no3)
#define PMK7           (((volatile __near __bitf_T *)0xFFD4)->no4)
#define CMPMK0         (((volatile __near __bitf_T *)0xFFD4)->no6)
#define TMMK06         (((volatile __near __bitf_T *)0xFFD5)->no0)
#define TMMK07         (((volatile __near __bitf_T *)0xFFD5)->no1)
#define ITMK00         (((volatile __near __bitf_T *)0xFFD5)->no2)
#define ITMK01         (((volatile __near __bitf_T *)0xFFD5)->no3)
#define FLMK           (((volatile __near __bitf_T *)0xFFD5)->no7)
#define PR02           (*(volatile __near unsigned short *)0xFFD8)
#define PR02L          (*(volatile __near unsigned char  *)0xFFD8)
#define PR02L_bit      (*(volatile __near __bitf_T *)0xFFD8)
#define PR02H          (*(volatile __near unsigned char  *)0xFFD9)
#define PR02H_bit      (*(volatile __near __bitf_T *)0xFFD9)
#define SREPR03        (((volatile __near __bitf_T *)0xFFD8)->no0)
#define TMPR004        (((volatile __near __bitf_T *)0xFFD8)->no1)
#define TMPR005        (((volatile __near __bitf_T *)0xFFD8)->no2)
#define PPR06          (((volatile __near __bitf_T *)0xFFD8)->no3)
#define PPR07          (((volatile __near __bitf_T *)0xFFD8)->no4)
#define CMPPR00        (((volatile __near __bitf_T *)0xFFD8)->no6)
#define TMPR006        (((volatile __near __bitf_T *)0xFFD9)->no0)
#define TMPR007        (((volatile __near __bitf_T *)0xFFD9)->no1)
#define ITPR000        (((volatile __near __bitf_T *)0xFFD9)->no2)
#define ITPR001        (((volatile __near __bitf_T *)0xFFD9)->no3)
#define FLPR0          (((volatile __near __bitf_T *)0xFFD9)->no7)
#define PR12           (*(volatile __near unsigned short *)0xFFDC)
#define PR12L          (*(volatile __near unsigned char  *)0xFFDC)
#define PR12L_bit      (*(volatile __near __bitf_T *)0xFFDC)
#define PR12H          (*(volatile __near unsigned char  *)0xFFDD)
#define PR12H_bit      (*(volatile __near __bitf_T *)0xFFDD)
#define SREPR13        (((volatile __near __bitf_T *)0xFFDC)->no0)
#define TMPR104        (((volatile __near __bitf_T *)0xFFDC)->no1)
#define TMPR105        (((volatile __near __bitf_T *)0xFFDC)->no2)
#define PPR16          (((volatile __near __bitf_T *)0xFFDC)->no3)
#define PPR17          (((volatile __near __bitf_T *)0xFFDC)->no4)
#define CMPPR10        (((volatile __near __bitf_T *)0xFFDC)->no6)
#define TMPR106        (((volatile __near __bitf_T *)0xFFDD)->no0)
#define TMPR107        (((volatile __near __bitf_T *)0xFFDD)->no1)
#define ITPR100        (((volatile __near __bitf_T *)0xFFDD)->no2)
#define ITPR101        (((volatile __near __bitf_T *)0xFFDD)->no3)
#define FLPR1          (((volatile __near __bitf_T *)0xFFDD)->no7)
#define IF0            (*(volatile __near unsigned short *)0xFFE0)
#define IF0L           (*(volatile __near unsigned char  *)0xFFE0)
#define IF0L_bit       (*(volatile __near __bitf_T *)0xFFE0)
#define IF0H           (*(volatile __near unsigned char  *)0xFFE1)
#define IF0H_bit       (*(volatile __near __bitf_T *)0xFFE1)
#define WDTIIF         (((volatile __near __bitf_T *)0xFFE0)->no0)
#define LVIIF          (((volatile __near __bitf_T *)0xFFE0)->no1)
#define PIF0           (((volatile __near __bitf_T *)0xFFE0)->no2)
#define PIF1           (((volatile __near __bitf_T *)0xFFE0)->no3)
#define PIF2           (((volatile __near __bitf_T *)0xFFE0)->no4)
#define PIF3           (((volatile __near __bitf_T *)0xFFE0)->no5)
#define PIF4           (((volatile __near __bitf_T *)0xFFE0)->no6)
#define PIF5           (((volatile __near __bitf_T *)0xFFE0)->no7)
#define CSIIF20        (((volatile __near __bitf_T *)0xFFE1)->no0)
#define IICIF20        (((volatile __near __bitf_T *)0xFFE1)->no0)
#define STIF2          (((volatile __near __bitf_T *)0xFFE1)->no0)
#define SRIF2          (((volatile __near __bitf_T *)0xFFE1)->no1)
#define SREIF2         (((volatile __near __bitf_T *)0xFFE1)->no2)
#define CSIIF00        (((volatile __near __bitf_T *)0xFFE1)->no5)
#define IICIF00        (((volatile __near __bitf_T *)0xFFE1)->no5)
#define STIF0          (((volatile __near __bitf_T *)0xFFE1)->no5)
#define TMIF00         (((volatile __near __bitf_T *)0xFFE1)->no6)
#define SRIF0          (((volatile __near __bitf_T *)0xFFE1)->no7)
#define IF1            (*(volatile __near unsigned short *)0xFFE2)
#define IF1L           (*(volatile __near unsigned char  *)0xFFE2)
#define IF1L_bit       (*(volatile __near __bitf_T *)0xFFE2)
#define IF1H           (*(volatile __near unsigned char  *)0xFFE3)
#define IF1H_bit       (*(volatile __near __bitf_T *)0xFFE3)
#define SREIF0         (((volatile __near __bitf_T *)0xFFE2)->no0)
#define TMIF01H        (((volatile __near __bitf_T *)0xFFE2)->no0)
#define CSIIF10        (((volatile __near __bitf_T *)0xFFE2)->no1)
#define IICIF10        (((volatile __near __bitf_T *)0xFFE2)->no1)
#define STIF1          (((volatile __near __bitf_T *)0xFFE2)->no1)
#define SRIF1          (((volatile __near __bitf_T *)0xFFE2)->no2)
#define SREIF1         (((volatile __near __bitf_T *)0xFFE2)->no3)
#define TMIF03H        (((volatile __near __bitf_T *)0xFFE2)->no3)
#define IICAIF0        (((volatile __near __bitf_T *)0xFFE2)->no4)
#define RTITIF         (((volatile __near __bitf_T *)0xFFE2)->no5)
#define TMIF01         (((volatile __near __bitf_T *)0xFFE2)->no7)
#define TMIF02         (((volatile __near __bitf_T *)0xFFE3)->no0)
#define TMIF03         (((volatile __near __bitf_T *)0xFFE3)->no1)
#define ADIF           (((volatile __near __bitf_T *)0xFFE3)->no2)
#define RTCIF          (((volatile __near __bitf_T *)0xFFE3)->no3)
#define TMKAIF         (((volatile __near __bitf_T *)0xFFE3)->no4)
#define KRIF           (((volatile __near __bitf_T *)0xFFE3)->no5)
#define CSIIF30        (((volatile __near __bitf_T *)0xFFE3)->no6)
#define IICIF30        (((volatile __near __bitf_T *)0xFFE3)->no6)
#define STIF3          (((volatile __near __bitf_T *)0xFFE3)->no6)
#define SRIF3          (((volatile __near __bitf_T *)0xFFE3)->no7)
#define MK0            (*(volatile __near unsigned short *)0xFFE4)
#define MK0L           (*(volatile __near unsigned char  *)0xFFE4)
#define MK0L_bit       (*(volatile __near __bitf_T *)0xFFE4)
#define MK0H           (*(volatile __near unsigned char  *)0xFFE5)
#define MK0H_bit       (*(volatile __near __bitf_T *)0xFFE5)
#define WDTIMK         (((volatile __near __bitf_T *)0xFFE4)->no0)
#define LVIMK          (((volatile __near __bitf_T *)0xFFE4)->no1)
#define PMK0           (((volatile __near __bitf_T *)0xFFE4)->no2)
#define PMK1           (((volatile __near __bitf_T *)0xFFE4)->no3)
#define PMK2           (((volatile __near __bitf_T *)0xFFE4)->no4)
#define PMK3           (((volatile __near __bitf_T *)0xFFE4)->no5)
#define PMK4           (((volatile __near __bitf_T *)0xFFE4)->no6)
#define PMK5           (((volatile __near __bitf_T *)0xFFE4)->no7)
#define CSIMK20        (((volatile __near __bitf_T *)0xFFE5)->no0)
#define IICMK20        (((volatile __near __bitf_T *)0xFFE5)->no0)
#define STMK2          (((volatile __near __bitf_T *)0xFFE5)->no0)
#define SRMK2          (((volatile __near __bitf_T *)0xFFE5)->no1)
#define SREMK2         (((volatile __near __bitf_T *)0xFFE5)->no2)
#define CSIMK00        (((volatile __near __bitf_T *)0xFFE5)->no5)
#define IICMK00        (((volatile __near __bitf_T *)0xFFE5)->no5)
#define STMK0          (((volatile __near __bitf_T *)0xFFE5)->no5)
#define TMMK00         (((volatile __near __bitf_T *)0xFFE5)->no6)
#define SRMK0          (((volatile __near __bitf_T *)0xFFE5)->no7)
#define MK1            (*(volatile __near unsigned short *)0xFFE6)
#define MK1L           (*(volatile __near unsigned char  *)0xFFE6)
#define MK1L_bit       (*(volatile __near __bitf_T *)0xFFE6)
#define MK1H           (*(volatile __near unsigned char  *)0xFFE7)
#define MK1H_bit       (*(volatile __near __bitf_T *)0xFFE7)
#define SREMK0         (((volatile __near __bitf_T *)0xFFE6)->no0)
#define TMMK01H        (((volatile __near __bitf_T *)0xFFE6)->no0)
#define CSIMK10        (((volatile __near __bitf_T *)0xFFE6)->no1)
#define IICMK10        (((volatile __near __bitf_T *)0xFFE6)->no1)
#define STMK1          (((volatile __near __bitf_T *)0xFFE6)->no1)
#define SRMK1          (((volatile __near __bitf_T *)0xFFE6)->no2)
#define SREMK1         (((volatile __near __bitf_T *)0xFFE6)->no3)
#define TMMK03H        (((volatile __near __bitf_T *)0xFFE6)->no3)
#define IICAMK0        (((volatile __near __bitf_T *)0xFFE6)->no4)
#define RTITMK         (((volatile __near __bitf_T *)0xFFE6)->no5)
#define TMMK01         (((volatile __near __bitf_T *)0xFFE6)->no7)
#define TMMK02         (((volatile __near __bitf_T *)0xFFE7)->no0)
#define TMMK03         (((volatile __near __bitf_T *)0xFFE7)->no1)
#define ADMK           (((volatile __near __bitf_T *)0xFFE7)->no2)
#define RTCMK          (((volatile __near __bitf_T *)0xFFE7)->no3)
#define TMKAMK         (((volatile __near __bitf_T *)0xFFE7)->no4)
#define KRMK           (((volatile __near __bitf_T *)0xFFE7)->no5)
#define CSIMK30        (((volatile __near __bitf_T *)0xFFE7)->no6)
#define IICMK30        (((volatile __near __bitf_T *)0xFFE7)->no6)
#define STMK3          (((volatile __near __bitf_T *)0xFFE7)->no6)
#define SRMK3          (((volatile __near __bitf_T *)0xFFE7)->no7)
#define PR00           (*(volatile __near unsigned short *)0xFFE8)
#define PR00L          (*(volatile __near unsigned char  *)0xFFE8)
#define PR00L_bit      (*(volatile __near __bitf_T *)0xFFE8)
#define PR00H          (*(volatile __near unsigned char  *)0xFFE9)
#define PR00H_bit      (*(volatile __near __bitf_T *)0xFFE9)
#define WDTIPR0        (((volatile __near __bitf_T *)0xFFE8)->no0)
#define LVIPR0         (((volatile __near __bitf_T *)0xFFE8)->no1)
#define PPR00          (((volatile __near __bitf_T *)0xFFE8)->no2)
#define PPR01          (((volatile __near __bitf_T *)0xFFE8)->no3)
#define PPR02          (((volatile __near __bitf_T *)0xFFE8)->no4)
#define PPR03          (((volatile __near __bitf_T *)0xFFE8)->no5)
#define PPR04          (((volatile __near __bitf_T *)0xFFE8)->no6)
#define PPR05          (((volatile __near __bitf_T *)0xFFE8)->no7)
#define CSIPR020       (((volatile __near __bitf_T *)0xFFE9)->no0)
#define IICPR020       (((volatile __near __bitf_T *)0xFFE9)->no0)
#define STPR02         (((volatile __near __bitf_T *)0xFFE9)->no0)
#define SRPR02         (((volatile __near __bitf_T *)0xFFE9)->no1)
#define SREPR02        (((volatile __near __bitf_T *)0xFFE9)->no2)
#define CSIPR000       (((volatile __near __bitf_T *)0xFFE9)->no5)
#define IICPR000       (((volatile __near __bitf_T *)0xFFE9)->no5)
#define STPR00         (((volatile __near __bitf_T *)0xFFE9)->no5)
#define TMPR000        (((volatile __near __bitf_T *)0xFFE9)->no6)
#define SRPR00         (((volatile __near __bitf_T *)0xFFE9)->no7)
#define PR01           (*(volatile __near unsigned short *)0xFFEA)
#define PR01L          (*(volatile __near unsigned char  *)0xFFEA)
#define PR01L_bit      (*(volatile __near __bitf_T *)0xFFEA)
#define PR01H          (*(volatile __near unsigned char  *)0xFFEB)
#define PR01H_bit      (*(volatile __near __bitf_T *)0xFFEB)
#define SREPR00        (((volatile __near __bitf_T *)0xFFEA)->no0)
#define TMPR001H       (((volatile __near __bitf_T *)0xFFEA)->no0)
#define CSIPR010       (((volatile __near __bitf_T *)0xFFEA)->no1)
#define IICPR010       (((volatile __near __bitf_T *)0xFFEA)->no1)
#define STPR01         (((volatile __near __bitf_T *)0xFFEA)->no1)
#define SRPR01         (((volatile __near __bitf_T *)0xFFEA)->no2)
#define SREPR01        (((volatile __near __bitf_T *)0xFFEA)->no3)
#define TMPR003H       (((volatile __near __bitf_T *)0xFFEA)->no3)
#define IICAPR00       (((volatile __near __bitf_T *)0xFFEA)->no4)
#define RTITPR0        (((volatile __near __bitf_T *)0xFFEA)->no5)
#define TMPR001        (((volatile __near __bitf_T *)0xFFEA)->no7)
#define TMPR002        (((volatile __near __bitf_T *)0xFFEB)->no0)
#define TMPR003        (((volatile __near __bitf_T *)0xFFEB)->no1)
#define ADPR0          (((volatile __near __bitf_T *)0xFFEB)->no2)
#define RTCPR0         (((volatile __near __bitf_T *)0xFFEB)->no3)
#define TMKAPR0        (((volatile __near __bitf_T *)0xFFEB)->no4)
#define KRPR0          (((volatile __near __bitf_T *)0xFFEB)->no5)
#define CSIPR030       (((volatile __near __bitf_T *)0xFFEB)->no6)
#define IICPR030       (((volatile __near __bitf_T *)0xFFEB)->no6)
#define STPR03         (((volatile __near __bitf_T *)0xFFEB)->no6)
#define SRPR03         (((volatile __near __bitf_T *)0xFFEB)->no7)
#define PR10           (*(volatile __near unsigned short *)0xFFEC)
#define PR10L          (*(volatile __near unsigned char  *)0xFFEC)
#define PR10L_bit      (*(volatile __near __bitf_T *)0xFFEC)
#define PR10H          (*(volatile __near unsigned char  *)0xFFED)
#define PR10H_bit      (*(volatile __near __bitf_T *)0xFFED)
#define WDTIPR1        (((volatile __near __bitf_T *)0xFFEC)->no0)
#define LVIPR1         (((volatile __near __bitf_T *)0xFFEC)->no1)
#define PPR10          (((volatile __near __bitf_T *)0xFFEC)->no2)
#define PPR11          (((volatile __near __bitf_T *)0xFFEC)->no3)
#define PPR12          (((volatile __near __bitf_T *)0xFFEC)->no4)
#define PPR13          (((volatile __near __bitf_T *)0xFFEC)->no5)
#define PPR14          (((volatile __near __bitf_T *)0xFFEC)->no6)
#define PPR15          (((volatile __near __bitf_T *)0xFFEC)->no7)
#define CSIPR120       (((volatile __near __bitf_T *)0xFFED)->no0)
#define IICPR120       (((volatile __near __bitf_T *)0xFFED)->no0)
#define STPR12         (((volatile __near __bitf_T *)0xFFED)->no0)
#define SRPR12         (((volatile __near __bitf_T *)0xFFED)->no1)
#define SREPR12        (((volatile __near __bitf_T *)0xFFED)->no2)
#define CSIPR100       (((volatile __near __bitf_T *)0xFFED)->no5)
#define IICPR100       (((volatile __near __bitf_T *)0xFFED)->no5)
#define STPR10         (((volatile __near __bitf_T *)0xFFED)->no5)
#define TMPR100        (((volatile __near __bitf_T *)0xFFED)->no6)
#define SRPR10         (((volatile __near __bitf_T *)0xFFED)->no7)
#define PR11           (*(volatile __near unsigned short *)0xFFEE)
#define PR11L          (*(volatile __near unsigned char  *)0xFFEE)
#define PR11L_bit      (*(volatile __near __bitf_T *)0xFFEE)
#define PR11H          (*(volatile __near unsigned char  *)0xFFEF)
#define PR11H_bit      (*(volatile __near __bitf_T *)0xFFEF)
#define SREPR10        (((volatile __near __bitf_T *)0xFFEE)->no0)
#define TMPR101H       (((volatile __near __bitf_T *)0xFFEE)->no0)
#define CSIPR110       (((volatile __near __bitf_T *)0xFFEE)->no1)
#define IICPR110       (((volatile __near __bitf_T *)0xFFEE)->no1)
#define STPR11         (((volatile __near __bitf_T *)0xFFEE)->no1)
#define SRPR11         (((volatile __near __bitf_T *)0xFFEE)->no2)
#define SREPR11        (((volatile __near __bitf_T *)0xFFEE)->no3)
#define TMPR103H       (((volatile __near __bitf_T *)0xFFEE)->no3)
#define IICAPR10       (((volatile __near __bitf_T *)0xFFEE)->no4)
#define RTITPR1        (((volatile __near __bitf_T *)0xFFEE)->no5)
#define TMPR101        (((volatile __near __bitf_T *)0xFFEE)->no7)
#define TMPR102        (((volatile __near __bitf_T *)0xFFEF)->no0)
#define TMPR103        (((volatile __near __bitf_T *)0xFFEF)->no1)
#define ADPR1          (((volatile __near __bitf_T *)0xFFEF)->no2)
#define RTCPR1         (((volatile __near __bitf_T *)0xFFEF)->no3)
#define TMKAPR1        (((volatile __near __bitf_T *)0xFFEF)->no4)
#define KRPR1          (((volatile __near __bitf_T *)0xFFEF)->no5)
#define CSIPR130       (((volatile __near __bitf_T *)0xFFEF)->no6)
#define IICPR130       (((volatile __near __bitf_T *)0xFFEF)->no6)
#define STPR13         (((volatile __near __bitf_T *)0xFFEF)->no6)
#define SRPR13         (((volatile __near __bitf_T *)0xFFEF)->no7)
#define MACRL          (*(volatile __near unsigned short *)0xFFF0)
#define MACRH          (*(volatile __near unsigned short *)0xFFF2)
#define PMC            (*(volatile __near unsigned char  *)0xFFFE)
#define PMC_bit        (*(volatile __near __bitf_T *)0xFFFE)
#define MAA            (((volatile __near __bitf_T *)0xFFFE)->no0)


#define INTWDTI                         0x0004
#define INTLVI                          0x0006
#define INTP0                           0x0008
#define INTP1                           0x000A
#define INTP2                           0x000C
#define INTP3                           0x000E
#define INTP4                           0x0010
#define INTP5                           0x0012
#define INTCSI20                        0x0014
#define INTIIC20                        0x0014
#define INTST2                          0x0014
#define INTSR2                          0x0016
#define INTSRE2                         0x0018
#define INTCSI00                        0x001E
#define INTIIC00                        0x001E
#define INTST0                          0x001E
#define INTTM00                         0x0020
#define INTSR0                          0x0022
#define INTSRE0                         0x0024
#define INTTM01H                        0x0024
#define INTCSI10                        0x0026
#define INTIIC10                        0x0026
#define INTST1                          0x0026
#define INTSR1                          0x0028
#define INTSRE1                         0x002A
#define INTTM03H                        0x002A
#define INTIICA0                        0x002C
#define INTRTIT                         0x002E
#define INTTM01                         0x0032
#define INTTM02                         0x0034
#define INTTM03                         0x0036
#define INTAD                           0x0038
#define INTRTC                          0x003A
#define INTIT                           0x003C
#define INTKR                           0x003E
#define INTCSI30                        0x0040
#define INTIIC30                        0x0040
#define INTST3                          0x0040
#define INTSR3                          0x0042
#define INTSRE3                         0x0044
#define INTTM04                         0x0046
#define INTTM05                         0x0048
#define INTP6                           0x004A
#define INTP7                           0x004C
#define INTCMP0                         0x0050
#define INTTM06                         0x0054
#define INTTM07                         0x0056
#define INTIT00                         0x0058
#define INTIT01                         0x005A
#define INTFL                           0x0062

#endif
